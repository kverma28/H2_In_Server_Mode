server.port=9000
h2.port=9092

spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=none

# ----------------------- Before Spring-boot 2.7 -----------------------
#   Property to mention DDL script file path
spring.datasource.schema=classpath:db/SalesOrders-schema.sql

#   Property to mention DML script file path
spring.datasource.data=classpath:db/SalesOrders-data.sql

# ----------------------- After Spring-boot 2.7 -----------------------

##   Property to mention DDL script file path
#spring.sql.init.schema-locations=classpath:db/SalesOrders-schema.sql
#
##   Property to mention DML script file path
#spring.sql.init.data-locations=classpath:db/SalesOrders-data.sql

#  ------------------------------------------------------------------------------------------------

#   NOTE

#   As of Spring Boot Version 2.7
#   the property spring.datasource.initialization-mode has been removed.
#   You should from this version and onwards use the replacement property spring.sql.init.mode
#   Example: spring.sql.init.mode:always
#
#   https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.7.0-Configuration-Changelog

#  ------------------------------------------------------------------------------------------------


#spring.datasource.platform=student

#   Either use above property (spring.datasource.platform) by putting schema.sql and data.sql file directly inside resources directory.
#   Or use spring.datasource.schema to mention DDL script file path
#   and spring.datasource.data to mention DML script file path

# Initialize a Database using basic SQL scripts
# ----------------------------------------------

#  Spring Boot can automatically create the schema (DDL scripts) of your DataSource and initialize it (DML scripts).
#  It loads SQL from the standard root classpath locations: schema.sql and data.sql, respectively.
#  In addition, Spring Boot processes the schema-${platform}.sql and data-${platform}.sql files (if present),
#  where platform is the value of spring.datasource.platform.
#  This allows you to switch to database-specific scripts if necessary.
#  For example, you might choose to set it to the vendor name of the database
#  (hsqldb, h2, oracle, mysql, postgresql, and so on).

# ----------------------------------------------------------------------------------------------------------------------

#  spring.jpa.hibernate.ddl-auto property is Spring Data JPA specific and is their way to specify a value
#  that will eventually be passed to Hibernate under the property it knows as hibernate.hbm2ddl.auto.
#  Using this property Spring Data JPA do the initialization of Database based upon the availability of
#  DDL and DML script in classpath or Entity class in classpath.

#  If you are having your own DDL and DML script to initialize and populate database
#  then turn this property off by setting its value to "none" to avoid conflicts.

# ----------------------------------------------------------------------------------------------------------------------


